import React, { useEffect, useState } from "react";
import { View, Text, Image, ScrollView, TouchableOpacity, StyleSheet, Alert, Modal } from "react-native";
import * as ImagePicker from "expo-image-picker";
import axios from "axios";

export default function UserOrderSummaryScreen({ route }) {
  const { bookingData } = route.params;
  const [images, setImages] = useState([]);
  const [selectedImage, setSelectedImage] = useState(null); // üî• ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡∏Å‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≠

  useEffect(() => {
    fetchImages();
  }, []);

  const fetchImages = async () => {
    try {
      const response = await axios.get(`http://10.0.2.2:30055/api/booking-images/${bookingData._id}`);
      console.log("üì∏ ‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤:", response.data); 
      setImages(response.data);
    } catch (error) {
      console.error("‚ùå Error fetching images:", error);
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô</Text>

      {/* ‚úÖ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö Card UI */}
      <View style={styles.card}>
        <Text style={styles.info}>üöó <Text style={styles.bold}>‡∏á‡∏≤‡∏ô‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç:</Text> {bookingData._id}</Text>
        <Text style={styles.info}>üìç <Text style={styles.bold}>‡∏à‡∏∏‡∏î‡∏£‡∏±‡∏ö:</Text> {bookingData.pickup_location.latitude}, {bookingData.pickup_location.longitude}</Text>
        <Text style={styles.info}>üìç <Text style={styles.bold}>‡∏à‡∏∏‡∏î‡∏™‡πà‡∏á:</Text> {bookingData.dropoff_location.latitude}, {bookingData.dropoff_location.longitude}</Text>
        <Text style={styles.info}>üõ£Ô∏è <Text style={styles.bold}>‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á:</Text> {bookingData.distance.toFixed(1)} ‡∏Å‡∏°.</Text>
        <Text style={styles.info}>üí∞ <Text style={styles.bold}>‡∏Ñ‡πà‡∏≤‡∏à‡πâ‡∏≤‡∏á:</Text> {bookingData.total_price} ‡∏ö‡∏≤‡∏ó</Text>
        <Text style={styles.info}>üìÖ <Text style={styles.bold}>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</Text> {new Date(bookingData.createdAt).toLocaleString()}</Text>
        <Text style={styles.info}>üìå <Text style={styles.bold}>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</Text> {bookingData.status}</Text>
        <Text style={styles.info}>üìå <Text style={styles.bold}>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏±‡∏î‡∏™‡πà‡∏á:</Text> {bookingData.status2}</Text>
        <Text style={styles.info}>üìù <Text style={styles.bold}>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</Text> {bookingData.note}</Text>
      </View>

      {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î */}
      <Text style={styles.subTitle}>üì∏ ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î</Text>
      <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.imageContainer}>
        {images.length > 0 ? (
          images.map((img, index) => (
            <TouchableOpacity key={index} onPress={() => setSelectedImage(`http://10.0.2.2:30055${img.imageUrl}`)}>
              <Image source={{ uri: `http://10.0.2.2:30055${img.imageUrl}` }} style={styles.image} />
            </TouchableOpacity>
          ))
        ) : (
          <Text style={styles.noImageText}>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</Text>
        )}
      </ScrollView>

      {/* ‚úÖ Modal ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≠ */}
      <Modal visible={!!selectedImage} transparent animationType="fade">
        <View style={styles.modalContainer}>
          <TouchableOpacity style={styles.closeButton} onPress={() => setSelectedImage(null)}>
            <Text style={styles.closeText}>‚úñ</Text>
          </TouchableOpacity>
          <Image source={{ uri: selectedImage }} style={styles.fullImage} />
        </View>
      </Modal>
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, padding: 20, backgroundColor: "#f9f9f9" },
  title: { fontSize: 24, fontWeight: "bold", textAlign: "center", marginBottom: 20, color: "#333" },
  subTitle: { fontSize: 18, fontWeight: "bold", marginTop: 20, marginBottom: 10, color: "#555" },
  
  card: { 
    backgroundColor: "#fff", 
    padding: 15, 
    borderRadius: 12, 
    shadowColor: "#000", 
    shadowOpacity: 0.1, 
    shadowRadius: 4, 
    elevation: 3, 
    marginBottom: 20 
  },
  info: { fontSize: 16, marginBottom: 8, color: "#444" },
  bold: { fontWeight: "bold", color: "#222" },

  imageContainer: { marginTop: 10 },
  image: { width: 120, height: 120, marginRight: 10, borderRadius: 10, borderWidth: 2, borderColor: "#ddd" },
  noImageText: { fontSize: 16, color: "gray", textAlign: "center", marginTop: 10 },

  // ‚úÖ ‡∏™‡πÑ‡∏ï‡∏•‡πå Modal ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≠
  modalContainer: {
    flex: 1,
    backgroundColor: "rgba(0,0,0,0.9)",
    justifyContent: "center",
    alignItems: "center"
  },
  fullImage: { width: "90%", height: "70%", resizeMode: "contain", borderRadius: 12 },
  closeButton: {
    position: "absolute",
    top: 40,
    right: 20,
    backgroundColor: "rgba(255,255,255,0.5)",
    padding: 10,
    borderRadius: 50
  },
  closeText: { fontSize: 18, color: "#fff", fontWeight: "bold" }
});
