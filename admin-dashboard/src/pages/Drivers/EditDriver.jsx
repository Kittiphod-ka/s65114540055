import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import axios from "axios";

const EditDriver = () => {
  const { id } = useParams(); // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ id ‡∏à‡∏≤‡∏Å URL
  const navigate = useNavigate();
  const [driver, setDriver] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    fetchDriver();
  }, []);

  const fetchDriver = async () => {
    try {
      console.log("üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö:", id);
      console.log("EditDriver id param:", id);
      const token = localStorage.getItem("token");
      const response = await axios.get(`${import.meta.env.VITE_API_URL}/api/drivers/${id}`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      console.log("‚úÖ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", response.data);
      setDriver(response.data);
      setLoading(false);
    } catch (error) {
      console.error("‚ùå Error fetching driver:", error);
      setError("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö!");
      setLoading(false);
    }
  };

  const handleUpdate = async (e) => {
    e.preventDefault();
    try {
      const token = localStorage.getItem("token");
      await axios.put(`${import.meta.env.VITE_API_URL}/api/drivers/${id}`, driver, {
        headers: { Authorization: `Bearer ${token}` },
      });
      alert("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      navigate("/drivers");
    } catch (error) {
      console.error("‚ùå Error updating driver:", error);
      alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ!");
    }
  };

  if (loading) return <p>‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>;
  if (error) return <p>{error}</p>;

  return (
    <div className="p-6">
      <h2 className="text-2xl font-bold">‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö</h2>
      <form onSubmit={handleUpdate} className="mt-4">
        <div className="mb-2">
          <label className="block font-semibold">‡∏¢‡∏π‡∏™‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÄ‡∏ô‡∏°:</label>
          <input type="text" value={driver.username} disabled className="border p-2 w-full" />
        </div>
        <div className="mb-2">
          <label className="block font-semibold">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:</label>
          <input
            type="text"
            value={driver.phone}
            onChange={(e) => setDriver({ ...driver, phone: e.target.value })}
            className="border p-2 w-full"
          />
        </div>
        <div className="mb-2">
          <label className="block font-semibold">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</label>
          <select
            value={driver.status}
            onChange={(e) => setDriver({ ...driver, status: e.target.value })}
            className="border p-2 w-full"
          >
            <option value="on">üü¢ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</option>
            <option value="off">‚ö™ ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</option>
          </select>
        </div>
        <button type="submit" className="bg-blue-500 text-white px-4 py-2 mt-4 rounded">
          üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
        </button>
      </form>
    </div>
  );
};

export default EditDriver;
